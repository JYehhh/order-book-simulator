PLANNING:
I presume we should design the structs first, or classes.
What are the features that I want to implement?

********************
    FEATURE LIST
********************

1. There will be one single market (this is a server).
2. There will be multiple clients that can connect to this market, and interact with it.
3. Each market will have contain multiple securities.
4. Clients can submit orders to the market for a specific security.
5. These orders will be matched with other limit orders existing in the market.
6. If an order is fulfilled, it will update the market, and update the client.

********************
    OBJECT LIST
********************
Server Side
1. Market
2. Security (the actual traded security - serial number and all)
3. Order Book (per security)
4. Order
    a. Market Order
    b. Limit Order
    c. Stop Order
5. User
    a. Will hold orders

Client Side
- Not sure if this will hold anything other than a session that accesses a user.

********************
      STEPS
********************
1. First implement a client/server relationship system
    a. Can start the server
    b. Accept user creation requests
    c. Accept user login requests
    d. Users can send requests (but they won't do anything)
2. Then, implement the server-side market setup
    a. Create a new security
    b. Setup dummy orders - attributed to certain users
3. Implement a matching engine that fulfils orders.
4. Then, implement user-server interations
    a. Add new orders
    b. Cancel orders
    c. Subscription and queries